<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>global.demoWow_create_change_request</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Create change request against the Cart Service for the </description>
        <name>demoWow_create_change_request</name>
        <script><![CDATA[var demoWow_create_change_request = Class.create();
demoWow_create_change_request.prototype = {
    createCR1: function() {
		
		var start_date = new GlideDateTime();
		
		
		//Script to set the BR as false which interrupts in setting the state directly (Name: State model - Can change state? & Change Model: Check State Transition)
		var script = new GlideRecord('sys_script');
		script.addQuery('sys_id','IN','f3fbe0d8cb200200d71cb9c0c24c9c93, b6dae9e15317101034d1ddeeff7b1278');
		script.query();
		while (script.next()) {
			script.setValue('active', 'false');
			script.update();
		}
	   
		//Lookup sysid of cartservice.
		var svc = new GlideRecord('cmdb_ci_kubernetes_service'); 
        svc.addQuery('sys_id','fee38e4c1b6eb01059dcca261a4bcb5a');  // Sys_ID of CartService for K8 Cluster for Demo
        svc.query(); // Issue the query to the database to get relevant records 
        while (svc.next()) { 
            var svcid=svc.sys_id; 
        }
		
		
		//Define the parameters for CR to be created
        var datadevopschg = [
			
			//order status CI
			{
                //ci: '683a1982dba6201079ffb2bd2b9619c9', //Boutique CartService
				ci: svcid,  //Boutique CartService
			
                shortdesc: 'DevOps orchestrationTask: Boutique cartservicev2#Prod deploy, action: prod_deploy',
                desc: 'DevOps orchestrationTask: cartservicev2#Prod deploy, action: prod_deploy, Deployment Link:',
				justification: 'This is an automated change request generated by the DevOps application.',
				implementation_plan: 'Link to the task_execution orchestrationTask associated with this change: Boutique,cartservicev2 canary deploy',
				risk_impact_analysis:'The DevOps application has determined this change to have a Low risk and 3 - Low impact. For more information, please see:https://ontherocks.service-now.com/sn_devops_step_execution.do?sys_id=8aeabd92db945010b7fffb941d961990&sysparm_stack=sn_devops_step_execution_list.do?sysparm_query=active=true',
				backout_plan:'Backout plan of the task_execution of Rollback Deployment remediation associated with Boutique,cartservicev2 canary deploy, Deployment Artifact Info: http://ec2-52-55-149-112.compute-1.amazonaws.com:30565/kiali/console/namespaces/boutique/istio/virtualservices/cartservice',
				test_plan:'Test plan of the task_execution orchestrationTask associated with this change:Boutique,cartservicev2 canary deploy',
				close_notes: 'Deployment Artifact Info: http://ec2-52-55-149-112.compute-1.amazonaws.com:30565/kiali/console/namespaces/boutique/istio/virtualservices/cartservice',
				close_code:'successful'
            } ];
		
		
		//Creation of DevOps Change Request
        for (var i = 0; i < datadevopschg.length; i++) {
			var val = datadevopschg[i];
		
		//Checking Open Change Records for the CI and deleting them
            var checkCR = new GlideRecord("change_request");
			checkCR.addQuery('cmdb_ci',val.ci);
			checkCR.query();
			while(checkCR.next()){
				checkCR.deleteRecord();
			}
			
			var PRCGr = new GlideRecord("change_request");
			PRCGr.initialize();
            PRCGr.setValue("assignment_group", "f94d5942db2a2010ba505a994b961981"); // SRE Team assignment
			//PRCGr.setValue("assigned_to", "3948666ae7012300dd926217c2f6a967");
            PRCGr.setValue("start_date", start_date);
			PRCGr.setValue("work_start", start_date);
            PRCGr.setValue("approval", "approved");
            PRCGr.setValue("phase_state", "open");
            PRCGr.setValue("state", "0");
            PRCGr.setValue("opened_by", "6b1c8154db122410e506ebea0b96198e");
            PRCGr.setValue("requested_by", "6b1c8154db122410e506ebea0b96198e7");
            PRCGr.setValue("category", "Software");
            
            //Setting value defined in data array

            PRCGr.setValue("short_description", val.shortdesc);
            PRCGr.setValue("cmdb_ci", val.ci);
            PRCGr.setValue("description", val.desc);
			PRCGr.setValue("justification", val.justification);
			PRCGr.setValue("implementation_plan", val.implementation_plan);
			PRCGr.setValue("risk_impact_analysis", val.risk_impact_analysis);
			PRCGr.setValue("backout_plan", val.backout_plan);
			PRCGr.setValue("test_plan", val.test_plan);
			PRCGr.setValue("close_notes", val.close_notes);
			PRCGr.setValue("close_code", val.close_code);
			
            var crnum = PRCGr.insert();
		}
		
		// Create Outage on Boutique App
        //Lookup sysid of cartservice.
		var svc = new GlideRecord('cmdb_ci_service_discovered'); 
        svc.addQuery('name','boutique@k8s_cluster-06a822de-ba67-4665-88e3-0d11e1479343');
        svc.query(); // Issue the query to the database to get relevant records 
        while (svc.next()) { 
            var svcid=svc.sys_id; 
        }
		
		var gdt = new GlideDateTime();
        var hours = 60*60*4;
        gdt.addSeconds(hours);
        var currentdatetime = new GlideDateTime(gdt.getDisplayValue());


		//Define the parameters for outage to be created
        var dataoutage = [
			
			//order status CI
			{
                
				ci: svcid,  //Boutique Application Service
				type: 'outage',
				message: 'Outage Noticed at: ' + currentdatetime,
                shortdesc: 'Outage noticed at: ' + currentdatetime + ', IT is aware and looking at the issue',
				details: 'Outage noticed at: ' +  currentdatetime + ', IT is aware and looking at the issue',
				begin: currentdatetime
            } ];
		
		
		//Creation of current outage on Boutique Application
        for (var i = 0; i < dataoutage.length; i++) {
			var val = dataoutage[i];
			//gs.info(val.details);
		
		//Checking Open Change Records for the CI and deleting them
            var checkOut = new GlideRecord("cmdb_ci_outage");
			checkOut.addQuery('cmdb_ci',val.ci);
			checkOut.addNullQuery('end');
			checkOut.orderByDesc('sys_created_on');
			checkOut.setLimit(1);
			checkOut.query();
			while(checkOut.next()){
				checkOut.deleteRecord();
			}
			
			var OUTGr = new GlideRecord("cmdb_ci_outage");
			OUTGr.initialize();
            OUTGr.cmdb_ci = svcid;
			OUTGr.type = val.type;
			OUTGr.begin = val.begin;
			OUTGr.message = val.message;
			OUTGr.short_description = "Test Outage";
			OUTGr.details = val.details
			
            var outnum = OUTGr.insert();
		}
		
		//Set back the BR to be as true as Change Creation is done now (Name: State model - Can change state & Change Model: Check State Transition)
		var script2 = new GlideRecord('sys_script');
		script2.addQuery('sys_id','IN','f3fbe0d8cb200200d71cb9c0c24c9c93, b6dae9e15317101034d1ddeeff7b1278');
		script2.query();
		while (script2.next()){
		   script2.setValue('active','true');
		   script2.update();
		}
		
		//Deploy cartservicev2 by calling integrationhub flow
        try {
		var inputs = {};
		inputs['deployment'] = 'cartservicev2'; // String 

		// Start Asynchronously: Uncomment to run in background. Code snippet will not have access to outputs.
		// sn_fd.FlowAPI.getRunner().action('global.demowow_deployment').inBackground().withInputs(inputs).run();
				
		// Execute Synchronously: Run in foreground. Code snippet has access to outputs.
		var result = sn_fd.FlowAPI.getRunner().action('global.demowow_deployment').inForeground().withInputs(inputs).run();
		var outputs = result.getOutputs();

		// Get Outputs:
		// Note: outputs can only be retrieved when executing synchronously.
		var status = outputs['status']; // String
		
		} catch (ex) {
			var message = ex.getMessage();
			gs.error(message);
		}
	
		
		// Run the demoWow Event Generator Group of Events - Check under "Simulation"
		var scriptToRun = 
		"gs.log('Starting simulating event group');\n" +
		"var lastTime = '';\n" +
		"var gr = new GlideRecord('u_event_generator');\n" + 
		"gr.addQuery('u_generator_group', '114d6e23dba26410ba505a994b9619d6');\n" + 
		"gr.orderBy('u_time_of_event'); //Order by earliest event to latest\n" + 
		"gr.query();\n" + 
		"while (gr.next()) {\n" + 
		"	var currentTime = gr.u_time_of_event.getGlideObject().getNumericValue();\n" + 
		"	if (lastTime == '') {\n" + 
		"		lastTime = currentTime;\n" + 
		"		EventGenerator.generateEvent(gr.sys_id);\n" + 
		"		continue;\n" + 
		"	}\n" + 	
		"	var timeDifference = currentTime-lastTime;\n" + 
		"	if (timeDifference > 0)\n" + 
		"		gs.sleep(timeDifference);\n" + 	
		"	EventGenerator.generateEvent(gr.sys_id);\n" + 
		"	lastTime = currentTime;		\n" + 
		"}\n" +
		"gs.log('Finished simulating event group');";			

		new GlideRunScriptJob().scheduleScript(scriptToRun);	


    
		
		
		//Run Discovery of Boutique Application to pick up new service
		//var dis = new discovery();
        //dis.discoverNow('ad0d4e01dbea6850e506ebea0b961920');
		
		//
		
		
		
		
    },

    type: 'demoWow_create_change_request'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>joe.steinfeld</sys_created_by>
        <sys_created_on>2021-02-27 23:48:27</sys_created_on>
        <sys_id>06fdb21edb2ae010ba505a994b96197c</sys_id>
        <sys_mod_count>31</sys_mod_count>
        <sys_name>demoWow_create_change_request</sys_name>
        <sys_package display_value="Global" source="global">global</sys_package>
        <sys_policy/>
        <sys_scope display_value="SN-demoWow">e798dbb98732b8905efa7597cebb3554</sys_scope>
        <sys_update_name>sys_script_include_06fdb21edb2ae010ba505a994b96197c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-09-25 18:50:39</sys_updated_on>
    </sys_script_include>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="SN-demoWow">e798dbb98732b8905efa7597cebb3554</claim_owner_scope>
        <claim_timestamp>17c1e4b8bbf0000001</claim_timestamp>
        <metadata_update_name>sys_script_include_06fdb21edb2ae010ba505a994b96197c</metadata_update_name>
        <previous_claim_app_version>1.0.0</previous_claim_app_version>
        <previous_claim_name>demoWow</previous_claim_name>
        <previous_claim_scope>e798dbb98732b8905efa7597cebb3554</previous_claim_scope>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-09-25 18:50:39</sys_created_on>
        <sys_id>1efa53718772b8905efa7597cebb35fe</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-09-25 18:50:39</sys_updated_on>
    </sys_claim>
</record_update>
